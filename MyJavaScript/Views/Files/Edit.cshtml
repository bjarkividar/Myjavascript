@model MyJavaScript.Models.Entity.File

@{
    ViewBag.Title = "Edit";
}

@*@<h4>Project name: @Html.DisplayNameFor(model => model.Title)</h4>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>File type: @Html.DisplayNameFor(model => model.ContentType)</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        @Html.DisplayNameFor(model => model.Title)
        @<div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContentType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContentType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContentType, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProjectID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProjectID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>

}*@

<div id="editor">
    @ViewBag.Code
</div>

@using (Html.BeginForm("SaveCode", "Files", FormMethod.Post))
{
    @Html.HiddenFor(m => m.Content, new { @id = "hidden_editor" } )
    @Html.HiddenFor(m => m.ID, new { @id = Url.RequestContext.RouteData.Values["ID"] })
    <input type="submit" value = "Save code" /> 
}

@section scripts
{
    <script src="~/ThirdParty/src-min-noconflict/ace.js" type="text/javascript" charset="utf-8"></script>
    <script src="~/Scripts/jquery.signalR-2.2.2.js"></script>
    <script src="~/signalr/hubs"></script>
    <script>

    var documentID = @ViewBag.DocumentID;
  
    var editor = ace.edit("editor");
    editor.setTheme("ace/theme/sqlserver");
    editor.getSession().setMode("ace/mode/javascript");

    $("form").submit(function () {
        $("#hidden_editor").val(editor.getSession().getValue());
    });

    var codeHub = $.connection.codeHub;
    var silent = false;

    codeHub.client.onChange =function (changeData)
    {
        console.log(changeData);

        silent = true;
        editor.getSession().getDocument().applyDelta(changeData);
        silent = false;
    };

    $.connection.hub.start().done(function ()
    {

        codeHub.server.joinDocument(documentID);

        editor.on("change", function (obj)
        {
            if(silent)
            {
                return;
            }
            console.log(obj);
            codeHub.server.onChange(obj, documentID);
        });
    });
    </script>
}


<div>
    @Html.ActionLink("Back to List", "Index" , new { id = Model.ProjectID })
</div>